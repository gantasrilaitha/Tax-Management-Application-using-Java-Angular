{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tax.service\";\nimport * as i2 from \"@angular/common\";\nfunction TaxManagementComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TaxManagementComponent_tr_19_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tax_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectTax(tax_r1));\n    });\n    i0.ɵɵtext(9, \"Select\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TaxManagementComponent_tr_19_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tax_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showUpdateForm(tax_r1.taxFormId));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TaxManagementComponent_tr_19_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tax_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTax(tax_r1.taxFormId));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tax_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r1.taxFormId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r1.formType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r1.formType);\n  }\n}\nexport class TaxManagementComponent {\n  constructor(taxService) {\n    this.taxService = taxService;\n    this.taxes = [];\n    this.selectedTax = {\n      taxFormId: 0,\n      formType: '',\n      filingDate: new Date(),\n      totalTaxAmount: 0,\n      userId: 0\n    };\n  }\n  ngOnInit() {\n    this.loadTaxes();\n  }\n  loadTaxes() {}\n  addTax() {}\n  // showUpdateForm(id: number): void {\n  //   // Retrieve tax details and display them in the form\n  //   const selectedTax = this.taxes.find(tax => tax.taxFormId === id);\n  //   if (selectedTax) {\n  //     this.selectedTax = { ...selectedTax };\n  //   }\n  // }\n  // updateTaxApi(): void {\n  //   this.taxService.updateTax(this.selectedTax.taxFormId, this.selectedTax).subscribe(\n  //     () => {\n  //       this.loadTaxes();\n  //       this.selectedTax = this.createEmptyTax(); // Clear the form\n  //     },\n  //     error => {\n  //       console.error('Error updating tax:', error);\n  //     }\n  //   );\n  // }\n  deleteTax(id) {}\n  selectTax(tax) {}\n}\nTaxManagementComponent.ɵfac = function TaxManagementComponent_Factory(t) {\n  return new (t || TaxManagementComponent)(i0.ɵɵdirectiveInject(i1.TaxService));\n};\nTaxManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaxManagementComponent,\n  selectors: [[\"app-tax-management\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TaxManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Tax Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Tax Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TaxManagementComponent_Template_button_click_5_listener() {\n        return ctx.loadTaxes();\n      });\n      i0.ɵɵtext(6, \"Refresh Taxes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 1)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"FormID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"FilingDate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"TaxAmount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, TaxManagementComponent_tr_19_Template, 14, 3, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"h3\");\n      i0.ɵɵtext(21, \"Add Tax\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taxes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAeUA,0BAA8B;IACxBA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAASA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IACjDA,kCAAgD;IAAxCA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA6B;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAC/DA,kCAA2C;IAAnCA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAL1DA,eAAoB;IAApBA,sCAAoB;IACpBA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAkB;IAAlBA,qCAAkB;;;ACTlC,OAAM,MAAOC,sBAAsB;EAUjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAT9B,UAAK,GAAU,EAAE;IACjB,gBAAW,GAAQ;MACjBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,IAAIC,IAAI,EAAE;MACtBC,cAAc,EAAE,CAAC;MACjBC,MAAM,EAAE;KACT;EAE6C;EAE9CC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS,IAET;EAEAC,MAAM,IAEN;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,SAAS,CAACC,EAAU,GAEpB;EAEAC,SAAS,CAACC,GAAQ,GAElB;;AAlDWf,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTnCrB,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK;MACvBA,2BAAK;MAEGA,8BAAc;MAAAA,iBAAK;MACvBA,iCAA8B;MAAtBA;QAAA,OAASsB,eAAW;MAAA,EAAC;MAACtB,6BAAa;MAAAA,iBAAS;MACpDA,gCAAoC;MAGxBA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,8BAAO;MACLA,wEASK;MACPA,iBAAQ;MAKhBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;;;MAfcA,gBAAQ;MAARA,mCAAQ","names":["i0","TaxManagementComponent","constructor","taxService","taxFormId","formType","filingDate","Date","totalTaxAmount","userId","ngOnInit","loadTaxes","addTax","deleteTax","id","selectTax","tax","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\tax_management_angular_fsd_iiht\\FullStack-Angular-Java-Tax-Management-Solution-main\\Frontend\\src\\app\\components\\tax-management\\tax-management.component.html","D:\\tax_management_angular_fsd_iiht\\FullStack-Angular-Java-Tax-Management-Solution-main\\Frontend\\src\\app\\components\\tax-management\\tax-management.component.ts"],"sourcesContent":["<h1>Tax Management</h1>\n<div>\n\n    <h2>Tax Management</h2>\n    <button (click)=\"loadTaxes()\">Refresh Taxes</button>\n    <table class=\"table table-striped\" >\n        <thead>\n          <tr>\n            <th>FormID</th>\n            <th>FilingDate</th>\n            <th>TaxAmount</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let tax of taxes\">\n            <td>{{ tax. taxFormId }}</td>\n            <td>{{ tax.formType }}</td>\n            <td>{{ tax.formType }}</td>\n            <td> <button (click)=\"selectTax(tax)\">Select</button>\n                <button (click)=\"showUpdateForm(tax.taxFormId)\">Update</button>\n                <button (click)=\"deleteTax(tax.taxFormId)\">Delete</button>\n\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    \n\n</div>\n<h3>Add Tax</h3>\n","import { Component, OnInit } from '@angular/core';\nimport { TaxService } from '../../services/tax.service';\nimport { Tax } from '../../models/tax-management.model';\n\n@Component({\n  selector: 'app-tax-management',\n  templateUrl: './tax-management.component.html',\n  styleUrls: ['./tax-management.component.css']\n})\nexport class TaxManagementComponent implements OnInit {\n  taxes: Tax[] = [];\n  selectedTax: Tax = {\n    taxFormId: 0,\n    formType: '',\n    filingDate: new Date(),\n    totalTaxAmount: 0,\n    userId: 0\n  };\n\n  constructor(private taxService: TaxService) { }\n\n  ngOnInit(): void {\n    this.loadTaxes();\n  }\n\n  loadTaxes(): void {\n    \n  }\n\n  addTax(): void {\n    \n  }\n\n  // showUpdateForm(id: number): void {\n  //   // Retrieve tax details and display them in the form\n  //   const selectedTax = this.taxes.find(tax => tax.taxFormId === id);\n  //   if (selectedTax) {\n  //     this.selectedTax = { ...selectedTax };\n  //   }\n  // }\n\n  // updateTaxApi(): void {\n  //   this.taxService.updateTax(this.selectedTax.taxFormId, this.selectedTax).subscribe(\n  //     () => {\n  //       this.loadTaxes();\n  //       this.selectedTax = this.createEmptyTax(); // Clear the form\n  //     },\n  //     error => {\n  //       console.error('Error updating tax:', error);\n  //     }\n  //   );\n  // }\n\n  deleteTax(id: number): void {\n    \n  }\n\n  selectTax(tax: Tax): void {\n    \n  }\n\n  // createEmptyTax(): Tax {\n  //   return {\n  //     taxFormId: 0,\n  //     formType: '',\n  //     filingDate: new Date(),\n  //     totalTaxAmount: 0,\n  //     userId: 0\n  //   };\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}