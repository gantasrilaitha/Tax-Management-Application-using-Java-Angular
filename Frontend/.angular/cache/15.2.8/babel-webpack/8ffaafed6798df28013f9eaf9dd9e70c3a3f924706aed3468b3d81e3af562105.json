{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tax.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaxManagementComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8, \" {{\");\n    i0.ɵɵelementStart(9, \"button\");\n    i0.ɵɵtext(10, \"Select\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\");\n    i0.ɵɵtext(12, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\");\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" }} \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tax_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r7.formType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r7.filingDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tax_r7.totalTaxAmount);\n  }\n}\nfunction TaxManagementComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Form Type cannot be blank. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaxManagementComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Filing Date is required and must be a past or present date. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaxManagementComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Total Tax Amount must be positive and cannot be null. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaxManagementComponent_mat_error_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" User ID is required and must be greater than 0. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TaxManagementComponent {\n  constructor(taxService) {\n    this.taxService = taxService;\n    this.taxes = [];\n    this.selectedTax = {\n      taxFormId: 0,\n      formType: '',\n      filingDate: new Date(),\n      totalTaxAmount: 0,\n      userId: 0\n    };\n  }\n  ngOnInit() {\n    this.loadTaxes();\n  }\n  loadTaxes() {\n    this.taxService.getAllTaxes().subscribe(data => {\n      this.taxes = data;\n      console.log(data);\n    });\n  }\n  addTax() {}\n  // showUpdateForm(id: number): void {\n  //   // Retrieve tax details and display them in the form\n  //   const selectedTax = this.taxes.find(tax => tax.taxFormId === id);\n  //   if (selectedTax) {\n  //     this.selectedTax = { ...selectedTax };\n  //   }\n  // }\n  // updateTaxApi(): void {\n  //   this.taxService.updateTax(this.selectedTax.taxFormId, this.selectedTax).subscribe(\n  //     () => {\n  //       this.loadTaxes();\n  //       this.selectedTax = this.createEmptyTax(); // Clear the form\n  //     },\n  //     error => {\n  //       console.error('Error updating tax:', error);\n  //     }\n  //   );\n  // }\n  deleteTax(id) {}\n  selectTax(tax) {}\n}\nTaxManagementComponent.ɵfac = function TaxManagementComponent_Factory(t) {\n  return new (t || TaxManagementComponent)(i0.ɵɵdirectiveInject(i1.TaxService));\n};\nTaxManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaxManagementComponent,\n  selectors: [[\"app-tax-management\"]],\n  decls: 53,\n  vars: 12,\n  consts: [[3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"taxForm\", \"ngForm\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"formType\", \"name\", \"formType\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"matInput\", \"\", \"id\", \"filingDate\", \"name\", \"filingDate\", \"required\", \"\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\", \"dateChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"id\", \"totalTaxAmount\", \"name\", \"totalTaxAmount\", \"required\", \"\", \"min\", \"0.01\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"id\", \"userId\", \"name\", \"userId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function TaxManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Tax Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Tax Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TaxManagementComponent_Template_button_click_5_listener() {\n        return ctx.loadTaxes();\n      });\n      i0.ɵɵtext(6, \"Refresh Taxes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 1)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"FormType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"FilingDate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"TaxAmount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, TaxManagementComponent_tr_19_Template, 16, 3, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"h3\");\n      i0.ɵɵtext(21, \"Add Tax\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TaxManagementComponent_Template_form_ngSubmit_22_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(23);\n        return i0.ɵɵresetView(ctx.onSubmit(_r1));\n      });\n      i0.ɵɵelementStart(24, \"div\")(25, \"mat-form-field\", 5)(26, \"mat-label\");\n      i0.ɵɵtext(27, \"Form Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TaxManagementComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.selectedTax.formType = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, TaxManagementComponent_mat_error_29_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\")(31, \"mat-form-field\", 5)(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Filing Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TaxManagementComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.selectedTax.filingDate = $event;\n      })(\"dateChange\", function TaxManagementComponent_Template_input_dateChange_34_listener($event) {\n        return ctx.validateDate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"mat-datepicker-toggle\", 9)(36, \"mat-datepicker\", null, 10);\n      i0.ɵɵtemplate(38, TaxManagementComponent_mat_error_38_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\")(40, \"mat-form-field\", 5)(41, \"mat-label\");\n      i0.ɵɵtext(42, \"Total Tax Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function TaxManagementComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.selectedTax.totalTaxAmount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(44, TaxManagementComponent_mat_error_44_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\")(46, \"mat-form-field\", 5)(47, \"mat-label\");\n      i0.ɵɵtext(48, \"User ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TaxManagementComponent_Template_input_ngModelChange_49_listener($event) {\n        return ctx.selectedTax.userId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, TaxManagementComponent_mat_error_50_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"button\", 13);\n      i0.ɵɵtext(52, \" Add \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(23);\n      const _r3 = i0.ɵɵreference(37);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taxes);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedTax.formType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formType.invalid && ctx.formType.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"matDatepicker\", _r3)(\"ngModel\", ctx.selectedTax.filingDate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r3);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.filingDate.invalid && ctx.filingDate.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedTax.totalTaxAmount);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.totalTaxAmount.invalid && ctx.totalTaxAmount.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedTax.userId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userId.invalid && ctx.userId.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r1.invalid);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TaxManagementComponent","constructor","taxService","taxFormId","formType","filingDate","Date","totalTaxAmount","userId","ngOnInit","loadTaxes","getAllTaxes","subscribe","data","taxes","console","log","addTax","deleteTax","id","selectTax","tax","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\tax_management_angular_fsd_iiht\\FullStack-Angular-Java-Tax-Management-Solution-main\\Frontend\\src\\app\\components\\tax-management\\tax-management.component.html","D:\\tax_management_angular_fsd_iiht\\FullStack-Angular-Java-Tax-Management-Solution-main\\Frontend\\src\\app\\components\\tax-management\\tax-management.component.ts"],"sourcesContent":["<h1>Tax Management</h1>\n<div>\n\n    <h2>Tax Management</h2>\n    <button (click)=\"loadTaxes()\">Refresh Taxes</button>\n    <table class=\"table table-striped\" >\n        <thead>\n          <tr>\n            <th>FormType</th>\n            <th>FilingDate</th>\n            <th>TaxAmount</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let tax of taxes\">\n            <td>{{ tax.formType }}</td>\n            <td>{{ tax.filingDate }}</td>\n            <td>{{tax.totalTaxAmount}}</td>\n            <td> {{<button >Select</button>\n                <button >Update</button>\n                <button >Delete</button>\n            }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    \n\n</div>\n<h3>Add Tax</h3>\n<form #taxForm=\"ngForm\" (ngSubmit)=\"onSubmit(taxForm)\" novalidate>\n    <div>\n      <!-- Form Type -->\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Form Type</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          id=\"formType\"\n          name=\"formType\"\n          [(ngModel)]=\"selectedTax.formType\"\n          required\n        />\n        <mat-error *ngIf=\"formType.invalid && formType.touched\">\n          Form Type cannot be blank.\n        </mat-error>\n      </mat-form-field>\n    </div>\n  \n    <div>\n      <!-- Filing Date -->\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Filing Date</mat-label>\n        <input\n          matInput\n          [matDatepicker]=\"picker\"\n          id=\"filingDate\"\n          name=\"filingDate\"\n          [(ngModel)]=\"selectedTax.filingDate\"\n          required\n          (dateChange)=\"validateDate($event)\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"picker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error *ngIf=\"filingDate.invalid && filingDate.touched\">\n          Filing Date is required and must be a past or present date.\n        </mat-error>\n      </mat-form-field>\n    </div>\n  \n    <div>\n      <!-- Total Tax Amount -->\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Total Tax Amount</mat-label>\n        <input\n          matInput\n          type=\"number\"\n          id=\"totalTaxAmount\"\n          name=\"totalTaxAmount\"\n          [(ngModel)]=\"selectedTax.totalTaxAmount\"\n          required\n          min=\"0.01\"\n        />\n        <mat-error *ngIf=\"totalTaxAmount.invalid && totalTaxAmount.touched\">\n          Total Tax Amount must be positive and cannot be null.\n        </mat-error>\n      </mat-form-field>\n    </div>\n  \n    <div>\n      <!-- User ID -->\n      <mat-form-field appearance=\"fill\">\n        <mat-label>User ID</mat-label>\n        <input\n          matInput\n          type=\"number\"\n          id=\"userId\"\n          name=\"userId\"\n          [(ngModel)]=\"selectedTax.userId\"\n          required\n        />\n        <mat-error *ngIf=\"userId.invalid && userId.touched\">\n          User ID is required and must be greater than 0.\n        </mat-error>\n      </mat-form-field>\n    </div>\n  \n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"taxForm.invalid\">\n      Add\n    </button>\n  </form>\n  ","import { Component, OnInit } from '@angular/core';\nimport { TaxService } from '../../services/tax.service';\nimport { Tax } from '../../models/tax-management.model';\n\n@Component({\n  selector: 'app-tax-management',\n  templateUrl: './tax-management.component.html',\n  styleUrls: ['./tax-management.component.css']\n})\nexport class TaxManagementComponent implements OnInit {\n  taxes: Tax[] = [];\n  selectedTax: Tax = {\n    taxFormId: 0,\n    formType: '',\n    filingDate: new Date(),\n    totalTaxAmount: 0,\n    userId: 0\n  };\n\n  constructor(private taxService: TaxService) { }\n\n  ngOnInit(): void {\n    this.loadTaxes();\n  }\n\n  loadTaxes(): void {\n    this.taxService.getAllTaxes().subscribe(\n      (data:Tax[]) => {\n        this.taxes = data;\n        console.log(data);\n      }\n    );\n  }\n\n  addTax(): void {\n    \n  }\n\n  // showUpdateForm(id: number): void {\n  //   // Retrieve tax details and display them in the form\n  //   const selectedTax = this.taxes.find(tax => tax.taxFormId === id);\n  //   if (selectedTax) {\n  //     this.selectedTax = { ...selectedTax };\n  //   }\n  // }\n\n  // updateTaxApi(): void {\n  //   this.taxService.updateTax(this.selectedTax.taxFormId, this.selectedTax).subscribe(\n  //     () => {\n  //       this.loadTaxes();\n  //       this.selectedTax = this.createEmptyTax(); // Clear the form\n  //     },\n  //     error => {\n  //       console.error('Error updating tax:', error);\n  //     }\n  //   );\n  // }\n\n  deleteTax(id: number): void {\n    \n  }\n\n  selectTax(tax: Tax): void {\n    \n  }\n\n  // createEmptyTax(): Tax {\n  //   return {\n  //     taxFormId: 0,\n  //     formType: '',\n  //     filingDate: new Date(),\n  //     totalTaxAmount: 0,\n  //     userId: 0\n  //   };\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}